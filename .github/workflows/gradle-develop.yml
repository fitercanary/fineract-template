name: Canary Points Fineract Build

on:
  push:
    branches:
      - canary-dev
      - canary-prod

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - uses: kamiazya/setup-graphviz@v1

      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8

      - name: Login to Github Packages Docker
        uses: azure/docker-login@v1
        with:
          login-server: 'docker.pkg.github.com'
          username: ${{ secrets.DOCKER_USERNAME_CANARY }}
          password: ${{ secrets.DOCKER_PASSWORD_CANARY }}

      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle

      - name: Gradlew Validation
        uses: gradle/wrapper-validation-action@v1

      - name: Build with Gradles
        run: ./gradlew clean war

      - name: Build Docker image
        uses: elgohr/Publish-Docker-Github-Action@master
        with:
          name: fiter1/fineract/canary-fineract-app
          username: ${{ secrets.DOCKER_USERNAME_CANARY }}
          password: ${{ secrets.DOCKER_PASSWORD_CANARY }}
          registry: docker.pkg.github.com
          tags: "latest"

      - name: Deploy to demo server
        if: endsWith(github.ref, '/canary-dev')
        run: |
          echo "$TEST_SERVER_SSH_KEY" > key.pem
          chmod 400 key.pem
          echo "Restart docker container...!!!"
          ssh -i key.pem -o StrictHostKeyChecking=no $TEST_SERVER_URL 'sudo /root/deploy-fineract.sh'
        env:
          TEST_SERVER_SSH_KEY: ${{ secrets.CANARY_SERVER_SSH_KEY }}
          TEST_SERVER_URL: ${{ secrets.CANARY_SERVER_URL }}

      - name: Deploy to production server
        if: endsWith(github.ref, '/canary-prod')
        run: |
          echo "$TEST_SERVER_SSH_KEY" > key.pem
          chmod 400 key.pem
          echo "Restart docker container...!!!"
          ssh -i key.pem -o StrictHostKeyChecking=no $TEST_SERVER_URL 'sudo /root/deploy-fineract.sh'
        env:
          TEST_SERVER_SSH_KEY: ${{ secrets.CANARY_PROD_SERVER_SSH_KEY }}
          TEST_SERVER_URL: ${{ secrets.CANARY_PROD_SERVER_URL }}